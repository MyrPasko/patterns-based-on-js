{"version":3,"sources":["3AbstractFactory.js"],"names":["console","warn","bmvProducer","kind","sportCarFactory","homeCarFactory","Z4","I3","log","produceCar","myCar","info"],"mappings":";;;;;;AAAAA,OAAO,CAACC,IAAR,CAAa,6CAAb,GAEA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,SAAOA,IAAI,KAAK,OAAT,GAAmBC,eAAnB,GAAqCC,cAA5C;AACD,EAED;;;AACA,SAASD,eAAT,GAA2B;AACzB,SAAO,IAAIE,EAAJ,EAAP;AACD;;AAED,SAASD,cAAT,GAA0B;AACxB,SAAO,IAAIE,EAAJ,EAAP;AACD;;IAEKD;;;;;;;;;2BACG;AACLN,MAAAA,OAAO,CAACQ,GAAR,CAAY,aAAZ;AACD;;;;;;IAGGD;;;;;;;;;2BACG;AACLP,MAAAA,OAAO,CAACQ,GAAR,CAAY,YAAZ;AACD;;;;;;AAGH,IAAMC,UAAU,GAAGP,WAAW,CAAC,OAAD,CAA9B;AAEA,IAAMQ,KAAK,GAAGD,UAAU,EAAxB;AAEAC,KAAK,CAACC,IAAN","file":"3AbstractFactory.64bb0f68.js","sourceRoot":"..","sourcesContent":["console.warn('----------Abstract Factory Method----------');\r\n\r\n// Abstract factory\r\nfunction bmvProducer(kind) {\r\n  return kind === 'sport' ? sportCarFactory : homeCarFactory;\r\n}\r\n\r\n// Factories\r\nfunction sportCarFactory() {\r\n  return new Z4();\r\n}\r\n\r\nfunction homeCarFactory() {\r\n  return new I3();\r\n}\r\n\r\nclass Z4 {\r\n  info() {\r\n    console.log('[Sport Car]');\r\n  }\r\n}\r\n\r\nclass I3 {\r\n  info() {\r\n    console.log('[Home Car]');\r\n  }\r\n}\r\n\r\nconst produceCar = bmvProducer('sport');\r\n\r\nconst myCar = produceCar();\r\n\r\nmyCar.info();\r\n\r\n"]}